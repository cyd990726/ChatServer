// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: offline_message_repo_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_offline_5fmessage_5frepo_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_offline_5fmessage_5frepo_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_offline_5fmessage_5frepo_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_offline_5fmessage_5frepo_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto;
namespace fixbug {
class InsertOfflineMessageRequest;
class InsertOfflineMessageRequestDefaultTypeInternal;
extern InsertOfflineMessageRequestDefaultTypeInternal _InsertOfflineMessageRequest_default_instance_;
class InsertOfflineMessageResponse;
class InsertOfflineMessageResponseDefaultTypeInternal;
extern InsertOfflineMessageResponseDefaultTypeInternal _InsertOfflineMessageResponse_default_instance_;
class QueryOfflineMessageRequest;
class QueryOfflineMessageRequestDefaultTypeInternal;
extern QueryOfflineMessageRequestDefaultTypeInternal _QueryOfflineMessageRequest_default_instance_;
class QueryOfflineMessageResponse;
class QueryOfflineMessageResponseDefaultTypeInternal;
extern QueryOfflineMessageResponseDefaultTypeInternal _QueryOfflineMessageResponse_default_instance_;
class RemoveOfflineMessageRequest;
class RemoveOfflineMessageRequestDefaultTypeInternal;
extern RemoveOfflineMessageRequestDefaultTypeInternal _RemoveOfflineMessageRequest_default_instance_;
class RemoveOfflineMessageResponse;
class RemoveOfflineMessageResponseDefaultTypeInternal;
extern RemoveOfflineMessageResponseDefaultTypeInternal _RemoveOfflineMessageResponse_default_instance_;
}  // namespace fixbug
PROTOBUF_NAMESPACE_OPEN
template<> ::fixbug::InsertOfflineMessageRequest* Arena::CreateMaybeMessage<::fixbug::InsertOfflineMessageRequest>(Arena*);
template<> ::fixbug::InsertOfflineMessageResponse* Arena::CreateMaybeMessage<::fixbug::InsertOfflineMessageResponse>(Arena*);
template<> ::fixbug::QueryOfflineMessageRequest* Arena::CreateMaybeMessage<::fixbug::QueryOfflineMessageRequest>(Arena*);
template<> ::fixbug::QueryOfflineMessageResponse* Arena::CreateMaybeMessage<::fixbug::QueryOfflineMessageResponse>(Arena*);
template<> ::fixbug::RemoveOfflineMessageRequest* Arena::CreateMaybeMessage<::fixbug::RemoveOfflineMessageRequest>(Arena*);
template<> ::fixbug::RemoveOfflineMessageResponse* Arena::CreateMaybeMessage<::fixbug::RemoveOfflineMessageResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace fixbug {

// ===================================================================

class InsertOfflineMessageRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fixbug.InsertOfflineMessageRequest) */ {
 public:
  inline InsertOfflineMessageRequest() : InsertOfflineMessageRequest(nullptr) {};
  virtual ~InsertOfflineMessageRequest();

  InsertOfflineMessageRequest(const InsertOfflineMessageRequest& from);
  InsertOfflineMessageRequest(InsertOfflineMessageRequest&& from) noexcept
    : InsertOfflineMessageRequest() {
    *this = ::std::move(from);
  }

  inline InsertOfflineMessageRequest& operator=(const InsertOfflineMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InsertOfflineMessageRequest& operator=(InsertOfflineMessageRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InsertOfflineMessageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InsertOfflineMessageRequest* internal_default_instance() {
    return reinterpret_cast<const InsertOfflineMessageRequest*>(
               &_InsertOfflineMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(InsertOfflineMessageRequest& a, InsertOfflineMessageRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InsertOfflineMessageRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InsertOfflineMessageRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InsertOfflineMessageRequest* New() const final {
    return CreateMaybeMessage<InsertOfflineMessageRequest>(nullptr);
  }

  InsertOfflineMessageRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InsertOfflineMessageRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InsertOfflineMessageRequest& from);
  void MergeFrom(const InsertOfflineMessageRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InsertOfflineMessageRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fixbug.InsertOfflineMessageRequest";
  }
  protected:
  explicit InsertOfflineMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto);
    return ::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgFieldNumber = 2,
    kUseridFieldNumber = 1,
  };
  // bytes msg = 2;
  void clear_msg();
  const std::string& msg() const;
  void set_msg(const std::string& value);
  void set_msg(std::string&& value);
  void set_msg(const char* value);
  void set_msg(const void* value, size_t size);
  std::string* mutable_msg();
  std::string* release_msg();
  void set_allocated_msg(std::string* msg);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_msg();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_msg(
      std::string* msg);
  private:
  const std::string& _internal_msg() const;
  void _internal_set_msg(const std::string& value);
  std::string* _internal_mutable_msg();
  public:

  // uint32 userid = 1;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint32 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:fixbug.InsertOfflineMessageRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_;
  ::PROTOBUF_NAMESPACE_ID::uint32 userid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_offline_5fmessage_5frepo_5fservice_2eproto;
};
// -------------------------------------------------------------------

class InsertOfflineMessageResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fixbug.InsertOfflineMessageResponse) */ {
 public:
  inline InsertOfflineMessageResponse() : InsertOfflineMessageResponse(nullptr) {};
  virtual ~InsertOfflineMessageResponse();

  InsertOfflineMessageResponse(const InsertOfflineMessageResponse& from);
  InsertOfflineMessageResponse(InsertOfflineMessageResponse&& from) noexcept
    : InsertOfflineMessageResponse() {
    *this = ::std::move(from);
  }

  inline InsertOfflineMessageResponse& operator=(const InsertOfflineMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline InsertOfflineMessageResponse& operator=(InsertOfflineMessageResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InsertOfflineMessageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InsertOfflineMessageResponse* internal_default_instance() {
    return reinterpret_cast<const InsertOfflineMessageResponse*>(
               &_InsertOfflineMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(InsertOfflineMessageResponse& a, InsertOfflineMessageResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(InsertOfflineMessageResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InsertOfflineMessageResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InsertOfflineMessageResponse* New() const final {
    return CreateMaybeMessage<InsertOfflineMessageResponse>(nullptr);
  }

  InsertOfflineMessageResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InsertOfflineMessageResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InsertOfflineMessageResponse& from);
  void MergeFrom(const InsertOfflineMessageResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InsertOfflineMessageResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fixbug.InsertOfflineMessageResponse";
  }
  protected:
  explicit InsertOfflineMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto);
    return ::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .fixbug.ResultCode result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::fixbug::ResultCode& result() const;
  ::fixbug::ResultCode* release_result();
  ::fixbug::ResultCode* mutable_result();
  void set_allocated_result(::fixbug::ResultCode* result);
  private:
  const ::fixbug::ResultCode& _internal_result() const;
  ::fixbug::ResultCode* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::fixbug::ResultCode* result);
  ::fixbug::ResultCode* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:fixbug.InsertOfflineMessageResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::fixbug::ResultCode* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_offline_5fmessage_5frepo_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RemoveOfflineMessageRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fixbug.RemoveOfflineMessageRequest) */ {
 public:
  inline RemoveOfflineMessageRequest() : RemoveOfflineMessageRequest(nullptr) {};
  virtual ~RemoveOfflineMessageRequest();

  RemoveOfflineMessageRequest(const RemoveOfflineMessageRequest& from);
  RemoveOfflineMessageRequest(RemoveOfflineMessageRequest&& from) noexcept
    : RemoveOfflineMessageRequest() {
    *this = ::std::move(from);
  }

  inline RemoveOfflineMessageRequest& operator=(const RemoveOfflineMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveOfflineMessageRequest& operator=(RemoveOfflineMessageRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoveOfflineMessageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveOfflineMessageRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveOfflineMessageRequest*>(
               &_RemoveOfflineMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(RemoveOfflineMessageRequest& a, RemoveOfflineMessageRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveOfflineMessageRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveOfflineMessageRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RemoveOfflineMessageRequest* New() const final {
    return CreateMaybeMessage<RemoveOfflineMessageRequest>(nullptr);
  }

  RemoveOfflineMessageRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoveOfflineMessageRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoveOfflineMessageRequest& from);
  void MergeFrom(const RemoveOfflineMessageRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveOfflineMessageRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fixbug.RemoveOfflineMessageRequest";
  }
  protected:
  explicit RemoveOfflineMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto);
    return ::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseridFieldNumber = 1,
  };
  // uint32 userid = 1;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint32 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:fixbug.RemoveOfflineMessageRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 userid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_offline_5fmessage_5frepo_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RemoveOfflineMessageResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fixbug.RemoveOfflineMessageResponse) */ {
 public:
  inline RemoveOfflineMessageResponse() : RemoveOfflineMessageResponse(nullptr) {};
  virtual ~RemoveOfflineMessageResponse();

  RemoveOfflineMessageResponse(const RemoveOfflineMessageResponse& from);
  RemoveOfflineMessageResponse(RemoveOfflineMessageResponse&& from) noexcept
    : RemoveOfflineMessageResponse() {
    *this = ::std::move(from);
  }

  inline RemoveOfflineMessageResponse& operator=(const RemoveOfflineMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveOfflineMessageResponse& operator=(RemoveOfflineMessageResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoveOfflineMessageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveOfflineMessageResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveOfflineMessageResponse*>(
               &_RemoveOfflineMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(RemoveOfflineMessageResponse& a, RemoveOfflineMessageResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveOfflineMessageResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveOfflineMessageResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RemoveOfflineMessageResponse* New() const final {
    return CreateMaybeMessage<RemoveOfflineMessageResponse>(nullptr);
  }

  RemoveOfflineMessageResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoveOfflineMessageResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoveOfflineMessageResponse& from);
  void MergeFrom(const RemoveOfflineMessageResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveOfflineMessageResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fixbug.RemoveOfflineMessageResponse";
  }
  protected:
  explicit RemoveOfflineMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto);
    return ::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // .fixbug.ResultCode result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::fixbug::ResultCode& result() const;
  ::fixbug::ResultCode* release_result();
  ::fixbug::ResultCode* mutable_result();
  void set_allocated_result(::fixbug::ResultCode* result);
  private:
  const ::fixbug::ResultCode& _internal_result() const;
  ::fixbug::ResultCode* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::fixbug::ResultCode* result);
  ::fixbug::ResultCode* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:fixbug.RemoveOfflineMessageResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::fixbug::ResultCode* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_offline_5fmessage_5frepo_5fservice_2eproto;
};
// -------------------------------------------------------------------

class QueryOfflineMessageRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fixbug.QueryOfflineMessageRequest) */ {
 public:
  inline QueryOfflineMessageRequest() : QueryOfflineMessageRequest(nullptr) {};
  virtual ~QueryOfflineMessageRequest();

  QueryOfflineMessageRequest(const QueryOfflineMessageRequest& from);
  QueryOfflineMessageRequest(QueryOfflineMessageRequest&& from) noexcept
    : QueryOfflineMessageRequest() {
    *this = ::std::move(from);
  }

  inline QueryOfflineMessageRequest& operator=(const QueryOfflineMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryOfflineMessageRequest& operator=(QueryOfflineMessageRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryOfflineMessageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryOfflineMessageRequest* internal_default_instance() {
    return reinterpret_cast<const QueryOfflineMessageRequest*>(
               &_QueryOfflineMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(QueryOfflineMessageRequest& a, QueryOfflineMessageRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryOfflineMessageRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryOfflineMessageRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryOfflineMessageRequest* New() const final {
    return CreateMaybeMessage<QueryOfflineMessageRequest>(nullptr);
  }

  QueryOfflineMessageRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryOfflineMessageRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryOfflineMessageRequest& from);
  void MergeFrom(const QueryOfflineMessageRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryOfflineMessageRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fixbug.QueryOfflineMessageRequest";
  }
  protected:
  explicit QueryOfflineMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto);
    return ::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUseridFieldNumber = 1,
  };
  // uint32 userid = 1;
  void clear_userid();
  ::PROTOBUF_NAMESPACE_ID::uint32 userid() const;
  void set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_userid() const;
  void _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:fixbug.QueryOfflineMessageRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 userid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_offline_5fmessage_5frepo_5fservice_2eproto;
};
// -------------------------------------------------------------------

class QueryOfflineMessageResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:fixbug.QueryOfflineMessageResponse) */ {
 public:
  inline QueryOfflineMessageResponse() : QueryOfflineMessageResponse(nullptr) {};
  virtual ~QueryOfflineMessageResponse();

  QueryOfflineMessageResponse(const QueryOfflineMessageResponse& from);
  QueryOfflineMessageResponse(QueryOfflineMessageResponse&& from) noexcept
    : QueryOfflineMessageResponse() {
    *this = ::std::move(from);
  }

  inline QueryOfflineMessageResponse& operator=(const QueryOfflineMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryOfflineMessageResponse& operator=(QueryOfflineMessageResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const QueryOfflineMessageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const QueryOfflineMessageResponse* internal_default_instance() {
    return reinterpret_cast<const QueryOfflineMessageResponse*>(
               &_QueryOfflineMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(QueryOfflineMessageResponse& a, QueryOfflineMessageResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(QueryOfflineMessageResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryOfflineMessageResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline QueryOfflineMessageResponse* New() const final {
    return CreateMaybeMessage<QueryOfflineMessageResponse>(nullptr);
  }

  QueryOfflineMessageResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<QueryOfflineMessageResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const QueryOfflineMessageResponse& from);
  void MergeFrom(const QueryOfflineMessageResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(QueryOfflineMessageResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "fixbug.QueryOfflineMessageResponse";
  }
  protected:
  explicit QueryOfflineMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto);
    return ::descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated bytes msgs = 2;
  int msgs_size() const;
  private:
  int _internal_msgs_size() const;
  public:
  void clear_msgs();
  const std::string& msgs(int index) const;
  std::string* mutable_msgs(int index);
  void set_msgs(int index, const std::string& value);
  void set_msgs(int index, std::string&& value);
  void set_msgs(int index, const char* value);
  void set_msgs(int index, const void* value, size_t size);
  std::string* add_msgs();
  void add_msgs(const std::string& value);
  void add_msgs(std::string&& value);
  void add_msgs(const char* value);
  void add_msgs(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& msgs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_msgs();
  private:
  const std::string& _internal_msgs(int index) const;
  std::string* _internal_add_msgs();
  public:

  // .fixbug.ResultCode result = 1;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  const ::fixbug::ResultCode& result() const;
  ::fixbug::ResultCode* release_result();
  ::fixbug::ResultCode* mutable_result();
  void set_allocated_result(::fixbug::ResultCode* result);
  private:
  const ::fixbug::ResultCode& _internal_result() const;
  ::fixbug::ResultCode* _internal_mutable_result();
  public:
  void unsafe_arena_set_allocated_result(
      ::fixbug::ResultCode* result);
  ::fixbug::ResultCode* unsafe_arena_release_result();

  // @@protoc_insertion_point(class_scope:fixbug.QueryOfflineMessageResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> msgs_;
  ::fixbug::ResultCode* result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_offline_5fmessage_5frepo_5fservice_2eproto;
};
// ===================================================================

class offline_message_model_Stub;

class offline_message_model : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline offline_message_model() {};
 public:
  virtual ~offline_message_model();

  typedef offline_message_model_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void insert(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::fixbug::InsertOfflineMessageRequest* request,
                       ::fixbug::InsertOfflineMessageResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void remove(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::fixbug::RemoveOfflineMessageRequest* request,
                       ::fixbug::RemoveOfflineMessageResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void query(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::fixbug::QueryOfflineMessageRequest* request,
                       ::fixbug::QueryOfflineMessageResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(offline_message_model);
};

class offline_message_model_Stub : public offline_message_model {
 public:
  offline_message_model_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  offline_message_model_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~offline_message_model_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements offline_message_model ------------------------------------------

  void insert(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::fixbug::InsertOfflineMessageRequest* request,
                       ::fixbug::InsertOfflineMessageResponse* response,
                       ::google::protobuf::Closure* done);
  void remove(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::fixbug::RemoveOfflineMessageRequest* request,
                       ::fixbug::RemoveOfflineMessageResponse* response,
                       ::google::protobuf::Closure* done);
  void query(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::fixbug::QueryOfflineMessageRequest* request,
                       ::fixbug::QueryOfflineMessageResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(offline_message_model_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// InsertOfflineMessageRequest

// uint32 userid = 1;
inline void InsertOfflineMessageRequest::clear_userid() {
  userid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 InsertOfflineMessageRequest::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 InsertOfflineMessageRequest::userid() const {
  // @@protoc_insertion_point(field_get:fixbug.InsertOfflineMessageRequest.userid)
  return _internal_userid();
}
inline void InsertOfflineMessageRequest::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  userid_ = value;
}
inline void InsertOfflineMessageRequest::set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:fixbug.InsertOfflineMessageRequest.userid)
}

// bytes msg = 2;
inline void InsertOfflineMessageRequest::clear_msg() {
  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& InsertOfflineMessageRequest::msg() const {
  // @@protoc_insertion_point(field_get:fixbug.InsertOfflineMessageRequest.msg)
  return _internal_msg();
}
inline void InsertOfflineMessageRequest::set_msg(const std::string& value) {
  _internal_set_msg(value);
  // @@protoc_insertion_point(field_set:fixbug.InsertOfflineMessageRequest.msg)
}
inline std::string* InsertOfflineMessageRequest::mutable_msg() {
  // @@protoc_insertion_point(field_mutable:fixbug.InsertOfflineMessageRequest.msg)
  return _internal_mutable_msg();
}
inline const std::string& InsertOfflineMessageRequest::_internal_msg() const {
  return msg_.Get();
}
inline void InsertOfflineMessageRequest::_internal_set_msg(const std::string& value) {
  
  msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void InsertOfflineMessageRequest::set_msg(std::string&& value) {
  
  msg_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:fixbug.InsertOfflineMessageRequest.msg)
}
inline void InsertOfflineMessageRequest::set_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:fixbug.InsertOfflineMessageRequest.msg)
}
inline void InsertOfflineMessageRequest::set_msg(const void* value,
    size_t size) {
  
  msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:fixbug.InsertOfflineMessageRequest.msg)
}
inline std::string* InsertOfflineMessageRequest::_internal_mutable_msg() {
  
  return msg_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* InsertOfflineMessageRequest::release_msg() {
  // @@protoc_insertion_point(field_release:fixbug.InsertOfflineMessageRequest.msg)
  return msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void InsertOfflineMessageRequest::set_allocated_msg(std::string* msg) {
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:fixbug.InsertOfflineMessageRequest.msg)
}
inline std::string* InsertOfflineMessageRequest::unsafe_arena_release_msg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:fixbug.InsertOfflineMessageRequest.msg)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return msg_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void InsertOfflineMessageRequest::unsafe_arena_set_allocated_msg(
    std::string* msg) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (msg != nullptr) {
    
  } else {
    
  }
  msg_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      msg, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fixbug.InsertOfflineMessageRequest.msg)
}

// -------------------------------------------------------------------

// InsertOfflineMessageResponse

// .fixbug.ResultCode result = 1;
inline bool InsertOfflineMessageResponse::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool InsertOfflineMessageResponse::has_result() const {
  return _internal_has_result();
}
inline const ::fixbug::ResultCode& InsertOfflineMessageResponse::_internal_result() const {
  const ::fixbug::ResultCode* p = result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fixbug::ResultCode*>(
      &::fixbug::_ResultCode_default_instance_);
}
inline const ::fixbug::ResultCode& InsertOfflineMessageResponse::result() const {
  // @@protoc_insertion_point(field_get:fixbug.InsertOfflineMessageResponse.result)
  return _internal_result();
}
inline void InsertOfflineMessageResponse::unsafe_arena_set_allocated_result(
    ::fixbug::ResultCode* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fixbug.InsertOfflineMessageResponse.result)
}
inline ::fixbug::ResultCode* InsertOfflineMessageResponse::release_result() {
  auto temp = unsafe_arena_release_result();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fixbug::ResultCode* InsertOfflineMessageResponse::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:fixbug.InsertOfflineMessageResponse.result)
  
  ::fixbug::ResultCode* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::fixbug::ResultCode* InsertOfflineMessageResponse::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::fixbug::ResultCode>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::fixbug::ResultCode* InsertOfflineMessageResponse::mutable_result() {
  // @@protoc_insertion_point(field_mutable:fixbug.InsertOfflineMessageResponse.result)
  return _internal_mutable_result();
}
inline void InsertOfflineMessageResponse::set_allocated_result(::fixbug::ResultCode* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result)->GetArena();
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:fixbug.InsertOfflineMessageResponse.result)
}

// -------------------------------------------------------------------

// RemoveOfflineMessageRequest

// uint32 userid = 1;
inline void RemoveOfflineMessageRequest::clear_userid() {
  userid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoveOfflineMessageRequest::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RemoveOfflineMessageRequest::userid() const {
  // @@protoc_insertion_point(field_get:fixbug.RemoveOfflineMessageRequest.userid)
  return _internal_userid();
}
inline void RemoveOfflineMessageRequest::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  userid_ = value;
}
inline void RemoveOfflineMessageRequest::set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:fixbug.RemoveOfflineMessageRequest.userid)
}

// -------------------------------------------------------------------

// RemoveOfflineMessageResponse

// .fixbug.ResultCode result = 1;
inline bool RemoveOfflineMessageResponse::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool RemoveOfflineMessageResponse::has_result() const {
  return _internal_has_result();
}
inline const ::fixbug::ResultCode& RemoveOfflineMessageResponse::_internal_result() const {
  const ::fixbug::ResultCode* p = result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fixbug::ResultCode*>(
      &::fixbug::_ResultCode_default_instance_);
}
inline const ::fixbug::ResultCode& RemoveOfflineMessageResponse::result() const {
  // @@protoc_insertion_point(field_get:fixbug.RemoveOfflineMessageResponse.result)
  return _internal_result();
}
inline void RemoveOfflineMessageResponse::unsafe_arena_set_allocated_result(
    ::fixbug::ResultCode* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fixbug.RemoveOfflineMessageResponse.result)
}
inline ::fixbug::ResultCode* RemoveOfflineMessageResponse::release_result() {
  auto temp = unsafe_arena_release_result();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fixbug::ResultCode* RemoveOfflineMessageResponse::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:fixbug.RemoveOfflineMessageResponse.result)
  
  ::fixbug::ResultCode* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::fixbug::ResultCode* RemoveOfflineMessageResponse::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::fixbug::ResultCode>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::fixbug::ResultCode* RemoveOfflineMessageResponse::mutable_result() {
  // @@protoc_insertion_point(field_mutable:fixbug.RemoveOfflineMessageResponse.result)
  return _internal_mutable_result();
}
inline void RemoveOfflineMessageResponse::set_allocated_result(::fixbug::ResultCode* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result)->GetArena();
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:fixbug.RemoveOfflineMessageResponse.result)
}

// -------------------------------------------------------------------

// QueryOfflineMessageRequest

// uint32 userid = 1;
inline void QueryOfflineMessageRequest::clear_userid() {
  userid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QueryOfflineMessageRequest::_internal_userid() const {
  return userid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 QueryOfflineMessageRequest::userid() const {
  // @@protoc_insertion_point(field_get:fixbug.QueryOfflineMessageRequest.userid)
  return _internal_userid();
}
inline void QueryOfflineMessageRequest::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  userid_ = value;
}
inline void QueryOfflineMessageRequest::set_userid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_userid(value);
  // @@protoc_insertion_point(field_set:fixbug.QueryOfflineMessageRequest.userid)
}

// -------------------------------------------------------------------

// QueryOfflineMessageResponse

// .fixbug.ResultCode result = 1;
inline bool QueryOfflineMessageResponse::_internal_has_result() const {
  return this != internal_default_instance() && result_ != nullptr;
}
inline bool QueryOfflineMessageResponse::has_result() const {
  return _internal_has_result();
}
inline const ::fixbug::ResultCode& QueryOfflineMessageResponse::_internal_result() const {
  const ::fixbug::ResultCode* p = result_;
  return p != nullptr ? *p : *reinterpret_cast<const ::fixbug::ResultCode*>(
      &::fixbug::_ResultCode_default_instance_);
}
inline const ::fixbug::ResultCode& QueryOfflineMessageResponse::result() const {
  // @@protoc_insertion_point(field_get:fixbug.QueryOfflineMessageResponse.result)
  return _internal_result();
}
inline void QueryOfflineMessageResponse::unsafe_arena_set_allocated_result(
    ::fixbug::ResultCode* result) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  result_ = result;
  if (result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:fixbug.QueryOfflineMessageResponse.result)
}
inline ::fixbug::ResultCode* QueryOfflineMessageResponse::release_result() {
  auto temp = unsafe_arena_release_result();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::fixbug::ResultCode* QueryOfflineMessageResponse::unsafe_arena_release_result() {
  // @@protoc_insertion_point(field_release:fixbug.QueryOfflineMessageResponse.result)
  
  ::fixbug::ResultCode* temp = result_;
  result_ = nullptr;
  return temp;
}
inline ::fixbug::ResultCode* QueryOfflineMessageResponse::_internal_mutable_result() {
  
  if (result_ == nullptr) {
    auto* p = CreateMaybeMessage<::fixbug::ResultCode>(GetArena());
    result_ = p;
  }
  return result_;
}
inline ::fixbug::ResultCode* QueryOfflineMessageResponse::mutable_result() {
  // @@protoc_insertion_point(field_mutable:fixbug.QueryOfflineMessageResponse.result)
  return _internal_mutable_result();
}
inline void QueryOfflineMessageResponse::set_allocated_result(::fixbug::ResultCode* result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(result_);
  }
  if (result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(result)->GetArena();
    if (message_arena != submessage_arena) {
      result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, result, submessage_arena);
    }
    
  } else {
    
  }
  result_ = result;
  // @@protoc_insertion_point(field_set_allocated:fixbug.QueryOfflineMessageResponse.result)
}

// repeated bytes msgs = 2;
inline int QueryOfflineMessageResponse::_internal_msgs_size() const {
  return msgs_.size();
}
inline int QueryOfflineMessageResponse::msgs_size() const {
  return _internal_msgs_size();
}
inline void QueryOfflineMessageResponse::clear_msgs() {
  msgs_.Clear();
}
inline std::string* QueryOfflineMessageResponse::add_msgs() {
  // @@protoc_insertion_point(field_add_mutable:fixbug.QueryOfflineMessageResponse.msgs)
  return _internal_add_msgs();
}
inline const std::string& QueryOfflineMessageResponse::_internal_msgs(int index) const {
  return msgs_.Get(index);
}
inline const std::string& QueryOfflineMessageResponse::msgs(int index) const {
  // @@protoc_insertion_point(field_get:fixbug.QueryOfflineMessageResponse.msgs)
  return _internal_msgs(index);
}
inline std::string* QueryOfflineMessageResponse::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:fixbug.QueryOfflineMessageResponse.msgs)
  return msgs_.Mutable(index);
}
inline void QueryOfflineMessageResponse::set_msgs(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:fixbug.QueryOfflineMessageResponse.msgs)
  msgs_.Mutable(index)->assign(value);
}
inline void QueryOfflineMessageResponse::set_msgs(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:fixbug.QueryOfflineMessageResponse.msgs)
  msgs_.Mutable(index)->assign(std::move(value));
}
inline void QueryOfflineMessageResponse::set_msgs(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  msgs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:fixbug.QueryOfflineMessageResponse.msgs)
}
inline void QueryOfflineMessageResponse::set_msgs(int index, const void* value, size_t size) {
  msgs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:fixbug.QueryOfflineMessageResponse.msgs)
}
inline std::string* QueryOfflineMessageResponse::_internal_add_msgs() {
  return msgs_.Add();
}
inline void QueryOfflineMessageResponse::add_msgs(const std::string& value) {
  msgs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:fixbug.QueryOfflineMessageResponse.msgs)
}
inline void QueryOfflineMessageResponse::add_msgs(std::string&& value) {
  msgs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:fixbug.QueryOfflineMessageResponse.msgs)
}
inline void QueryOfflineMessageResponse::add_msgs(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  msgs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:fixbug.QueryOfflineMessageResponse.msgs)
}
inline void QueryOfflineMessageResponse::add_msgs(const void* value, size_t size) {
  msgs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:fixbug.QueryOfflineMessageResponse.msgs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
QueryOfflineMessageResponse::msgs() const {
  // @@protoc_insertion_point(field_list:fixbug.QueryOfflineMessageResponse.msgs)
  return msgs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
QueryOfflineMessageResponse::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:fixbug.QueryOfflineMessageResponse.msgs)
  return &msgs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace fixbug

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_offline_5fmessage_5frepo_5fservice_2eproto
