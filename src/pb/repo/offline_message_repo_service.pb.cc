// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: offline_message_repo_service.proto

#include "offline_message_repo_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_common_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ResultCode_common_2eproto;
namespace fixbug {
class InsertOfflineMessageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InsertOfflineMessageRequest> _instance;
} _InsertOfflineMessageRequest_default_instance_;
class InsertOfflineMessageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InsertOfflineMessageResponse> _instance;
} _InsertOfflineMessageResponse_default_instance_;
class RemoveOfflineMessageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOfflineMessageRequest> _instance;
} _RemoveOfflineMessageRequest_default_instance_;
class RemoveOfflineMessageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RemoveOfflineMessageResponse> _instance;
} _RemoveOfflineMessageResponse_default_instance_;
class QueryOfflineMessageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryOfflineMessageRequest> _instance;
} _QueryOfflineMessageRequest_default_instance_;
class QueryOfflineMessageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueryOfflineMessageResponse> _instance;
} _QueryOfflineMessageResponse_default_instance_;
}  // namespace fixbug
static void InitDefaultsscc_info_InsertOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fixbug::_InsertOfflineMessageRequest_default_instance_;
    new (ptr) ::fixbug::InsertOfflineMessageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fixbug::InsertOfflineMessageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InsertOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InsertOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_InsertOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fixbug::_InsertOfflineMessageResponse_default_instance_;
    new (ptr) ::fixbug::InsertOfflineMessageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fixbug::InsertOfflineMessageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_InsertOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_InsertOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto}, {
      &scc_info_ResultCode_common_2eproto.base,}};

static void InitDefaultsscc_info_QueryOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fixbug::_QueryOfflineMessageRequest_default_instance_;
    new (ptr) ::fixbug::QueryOfflineMessageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fixbug::QueryOfflineMessageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_QueryOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_QueryOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_QueryOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fixbug::_QueryOfflineMessageResponse_default_instance_;
    new (ptr) ::fixbug::QueryOfflineMessageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fixbug::QueryOfflineMessageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_QueryOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_QueryOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto}, {
      &scc_info_ResultCode_common_2eproto.base,}};

static void InitDefaultsscc_info_RemoveOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fixbug::_RemoveOfflineMessageRequest_default_instance_;
    new (ptr) ::fixbug::RemoveOfflineMessageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fixbug::RemoveOfflineMessageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RemoveOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RemoveOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto}, {}};

static void InitDefaultsscc_info_RemoveOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fixbug::_RemoveOfflineMessageResponse_default_instance_;
    new (ptr) ::fixbug::RemoveOfflineMessageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fixbug::RemoveOfflineMessageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RemoveOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RemoveOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto}, {
      &scc_info_ResultCode_common_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_offline_5fmessage_5frepo_5fservice_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_offline_5fmessage_5frepo_5fservice_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_offline_5fmessage_5frepo_5fservice_2eproto[1];

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_offline_5fmessage_5frepo_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::fixbug::InsertOfflineMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::fixbug::InsertOfflineMessageRequest, userid_),
  PROTOBUF_FIELD_OFFSET(::fixbug::InsertOfflineMessageRequest, msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::fixbug::InsertOfflineMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::fixbug::InsertOfflineMessageResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::fixbug::RemoveOfflineMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::fixbug::RemoveOfflineMessageRequest, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::fixbug::RemoveOfflineMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::fixbug::RemoveOfflineMessageResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::fixbug::QueryOfflineMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::fixbug::QueryOfflineMessageRequest, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::fixbug::QueryOfflineMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::fixbug::QueryOfflineMessageResponse, result_),
  PROTOBUF_FIELD_OFFSET(::fixbug::QueryOfflineMessageResponse, msgs_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::fixbug::InsertOfflineMessageRequest)},
  { 7, -1, sizeof(::fixbug::InsertOfflineMessageResponse)},
  { 13, -1, sizeof(::fixbug::RemoveOfflineMessageRequest)},
  { 19, -1, sizeof(::fixbug::RemoveOfflineMessageResponse)},
  { 25, -1, sizeof(::fixbug::QueryOfflineMessageRequest)},
  { 31, -1, sizeof(::fixbug::QueryOfflineMessageResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::fixbug::_InsertOfflineMessageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::fixbug::_InsertOfflineMessageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::fixbug::_RemoveOfflineMessageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::fixbug::_RemoveOfflineMessageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::fixbug::_QueryOfflineMessageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::fixbug::_QueryOfflineMessageResponse_default_instance_),
};

const char descriptor_table_protodef_offline_5fmessage_5frepo_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"offline_message_repo_service.proto\022\006fi"
  "xbug\032\014common.proto\":\n\033InsertOfflineMessa"
  "geRequest\022\016\n\006userid\030\001 \001(\r\022\013\n\003msg\030\002 \001(\014\"B"
  "\n\034InsertOfflineMessageResponse\022\"\n\006result"
  "\030\001 \001(\0132\022.fixbug.ResultCode\"-\n\033RemoveOffl"
  "ineMessageRequest\022\016\n\006userid\030\001 \001(\r\"B\n\034Rem"
  "oveOfflineMessageResponse\022\"\n\006result\030\001 \001("
  "\0132\022.fixbug.ResultCode\",\n\032QueryOfflineMes"
  "sageRequest\022\016\n\006userid\030\001 \001(\r\"O\n\033QueryOffl"
  "ineMessageResponse\022\"\n\006result\030\001 \001(\0132\022.fix"
  "bug.ResultCode\022\014\n\004msgs\030\002 \003(\0142\223\002\n\025offline"
  "_message_model\022S\n\006insert\022#.fixbug.Insert"
  "OfflineMessageRequest\032$.fixbug.InsertOff"
  "lineMessageResponse\022S\n\006remove\022#.fixbug.R"
  "emoveOfflineMessageRequest\032$.fixbug.Remo"
  "veOfflineMessageResponse\022P\n\005query\022\".fixb"
  "ug.QueryOfflineMessageRequest\032#.fixbug.Q"
  "ueryOfflineMessageResponseB\003\200\001\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto_deps[1] = {
  &::descriptor_table_common_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto_sccs[6] = {
  &scc_info_InsertOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto.base,
  &scc_info_InsertOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto.base,
  &scc_info_QueryOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto.base,
  &scc_info_QueryOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto.base,
  &scc_info_RemoveOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto.base,
  &scc_info_RemoveOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto = {
  false, false, descriptor_table_protodef_offline_5fmessage_5frepo_5fservice_2eproto, "offline_message_repo_service.proto", 719,
  &descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto_once, descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto_sccs, descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto_deps, 6, 1,
  schemas, file_default_instances, TableStruct_offline_5fmessage_5frepo_5fservice_2eproto::offsets,
  file_level_metadata_offline_5fmessage_5frepo_5fservice_2eproto, 6, file_level_enum_descriptors_offline_5fmessage_5frepo_5fservice_2eproto, file_level_service_descriptors_offline_5fmessage_5frepo_5fservice_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_offline_5fmessage_5frepo_5fservice_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto)), true);
namespace fixbug {

// ===================================================================

void InsertOfflineMessageRequest::InitAsDefaultInstance() {
}
class InsertOfflineMessageRequest::_Internal {
 public:
};

InsertOfflineMessageRequest::InsertOfflineMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:fixbug.InsertOfflineMessageRequest)
}
InsertOfflineMessageRequest::InsertOfflineMessageRequest(const InsertOfflineMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_msg().empty()) {
    msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_msg(),
      GetArena());
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:fixbug.InsertOfflineMessageRequest)
}

void InsertOfflineMessageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InsertOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  userid_ = 0u;
}

InsertOfflineMessageRequest::~InsertOfflineMessageRequest() {
  // @@protoc_insertion_point(destructor:fixbug.InsertOfflineMessageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InsertOfflineMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InsertOfflineMessageRequest::ArenaDtor(void* object) {
  InsertOfflineMessageRequest* _this = reinterpret_cast< InsertOfflineMessageRequest* >(object);
  (void)_this;
}
void InsertOfflineMessageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InsertOfflineMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InsertOfflineMessageRequest& InsertOfflineMessageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InsertOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto.base);
  return *internal_default_instance();
}


void InsertOfflineMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fixbug.InsertOfflineMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  userid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InsertOfflineMessageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 userid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InsertOfflineMessageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fixbug.InsertOfflineMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 userid = 1;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_userid(), target);
  }

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fixbug.InsertOfflineMessageRequest)
  return target;
}

size_t InsertOfflineMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fixbug.InsertOfflineMessageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_msg());
  }

  // uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_userid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertOfflineMessageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fixbug.InsertOfflineMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertOfflineMessageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InsertOfflineMessageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fixbug.InsertOfflineMessageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fixbug.InsertOfflineMessageRequest)
    MergeFrom(*source);
  }
}

void InsertOfflineMessageRequest::MergeFrom(const InsertOfflineMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fixbug.InsertOfflineMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {
    _internal_set_msg(from._internal_msg());
  }
  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
}

void InsertOfflineMessageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fixbug.InsertOfflineMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertOfflineMessageRequest::CopyFrom(const InsertOfflineMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fixbug.InsertOfflineMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertOfflineMessageRequest::IsInitialized() const {
  return true;
}

void InsertOfflineMessageRequest::InternalSwap(InsertOfflineMessageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(userid_, other->userid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InsertOfflineMessageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InsertOfflineMessageResponse::InitAsDefaultInstance() {
  ::fixbug::_InsertOfflineMessageResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::fixbug::ResultCode*>(
      ::fixbug::ResultCode::internal_default_instance());
}
class InsertOfflineMessageResponse::_Internal {
 public:
  static const ::fixbug::ResultCode& result(const InsertOfflineMessageResponse* msg);
};

const ::fixbug::ResultCode&
InsertOfflineMessageResponse::_Internal::result(const InsertOfflineMessageResponse* msg) {
  return *msg->result_;
}
void InsertOfflineMessageResponse::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
InsertOfflineMessageResponse::InsertOfflineMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:fixbug.InsertOfflineMessageResponse)
}
InsertOfflineMessageResponse::InsertOfflineMessageResponse(const InsertOfflineMessageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::fixbug::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:fixbug.InsertOfflineMessageResponse)
}

void InsertOfflineMessageResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InsertOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto.base);
  result_ = nullptr;
}

InsertOfflineMessageResponse::~InsertOfflineMessageResponse() {
  // @@protoc_insertion_point(destructor:fixbug.InsertOfflineMessageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void InsertOfflineMessageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void InsertOfflineMessageResponse::ArenaDtor(void* object) {
  InsertOfflineMessageResponse* _this = reinterpret_cast< InsertOfflineMessageResponse* >(object);
  (void)_this;
}
void InsertOfflineMessageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InsertOfflineMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InsertOfflineMessageResponse& InsertOfflineMessageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InsertOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto.base);
  return *internal_default_instance();
}


void InsertOfflineMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fixbug.InsertOfflineMessageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InsertOfflineMessageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .fixbug.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InsertOfflineMessageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fixbug.InsertOfflineMessageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fixbug.ResultCode result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fixbug.InsertOfflineMessageResponse)
  return target;
}

size_t InsertOfflineMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fixbug.InsertOfflineMessageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .fixbug.ResultCode result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InsertOfflineMessageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fixbug.InsertOfflineMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InsertOfflineMessageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InsertOfflineMessageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fixbug.InsertOfflineMessageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fixbug.InsertOfflineMessageResponse)
    MergeFrom(*source);
  }
}

void InsertOfflineMessageResponse::MergeFrom(const InsertOfflineMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fixbug.InsertOfflineMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::fixbug::ResultCode::MergeFrom(from._internal_result());
  }
}

void InsertOfflineMessageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fixbug.InsertOfflineMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InsertOfflineMessageResponse::CopyFrom(const InsertOfflineMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fixbug.InsertOfflineMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InsertOfflineMessageResponse::IsInitialized() const {
  return true;
}

void InsertOfflineMessageResponse::InternalSwap(InsertOfflineMessageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InsertOfflineMessageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOfflineMessageRequest::InitAsDefaultInstance() {
}
class RemoveOfflineMessageRequest::_Internal {
 public:
};

RemoveOfflineMessageRequest::RemoveOfflineMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:fixbug.RemoveOfflineMessageRequest)
}
RemoveOfflineMessageRequest::RemoveOfflineMessageRequest(const RemoveOfflineMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:fixbug.RemoveOfflineMessageRequest)
}

void RemoveOfflineMessageRequest::SharedCtor() {
  userid_ = 0u;
}

RemoveOfflineMessageRequest::~RemoveOfflineMessageRequest() {
  // @@protoc_insertion_point(destructor:fixbug.RemoveOfflineMessageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOfflineMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RemoveOfflineMessageRequest::ArenaDtor(void* object) {
  RemoveOfflineMessageRequest* _this = reinterpret_cast< RemoveOfflineMessageRequest* >(object);
  (void)_this;
}
void RemoveOfflineMessageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOfflineMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOfflineMessageRequest& RemoveOfflineMessageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RemoveOfflineMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fixbug.RemoveOfflineMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOfflineMessageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 userid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOfflineMessageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fixbug.RemoveOfflineMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 userid = 1;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_userid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fixbug.RemoveOfflineMessageRequest)
  return target;
}

size_t RemoveOfflineMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fixbug.RemoveOfflineMessageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_userid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOfflineMessageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fixbug.RemoveOfflineMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOfflineMessageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOfflineMessageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fixbug.RemoveOfflineMessageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fixbug.RemoveOfflineMessageRequest)
    MergeFrom(*source);
  }
}

void RemoveOfflineMessageRequest::MergeFrom(const RemoveOfflineMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fixbug.RemoveOfflineMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
}

void RemoveOfflineMessageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fixbug.RemoveOfflineMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOfflineMessageRequest::CopyFrom(const RemoveOfflineMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fixbug.RemoveOfflineMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOfflineMessageRequest::IsInitialized() const {
  return true;
}

void RemoveOfflineMessageRequest::InternalSwap(RemoveOfflineMessageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(userid_, other->userid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOfflineMessageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RemoveOfflineMessageResponse::InitAsDefaultInstance() {
  ::fixbug::_RemoveOfflineMessageResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::fixbug::ResultCode*>(
      ::fixbug::ResultCode::internal_default_instance());
}
class RemoveOfflineMessageResponse::_Internal {
 public:
  static const ::fixbug::ResultCode& result(const RemoveOfflineMessageResponse* msg);
};

const ::fixbug::ResultCode&
RemoveOfflineMessageResponse::_Internal::result(const RemoveOfflineMessageResponse* msg) {
  return *msg->result_;
}
void RemoveOfflineMessageResponse::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
RemoveOfflineMessageResponse::RemoveOfflineMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:fixbug.RemoveOfflineMessageResponse)
}
RemoveOfflineMessageResponse::RemoveOfflineMessageResponse(const RemoveOfflineMessageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::fixbug::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:fixbug.RemoveOfflineMessageResponse)
}

void RemoveOfflineMessageResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RemoveOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto.base);
  result_ = nullptr;
}

RemoveOfflineMessageResponse::~RemoveOfflineMessageResponse() {
  // @@protoc_insertion_point(destructor:fixbug.RemoveOfflineMessageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RemoveOfflineMessageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void RemoveOfflineMessageResponse::ArenaDtor(void* object) {
  RemoveOfflineMessageResponse* _this = reinterpret_cast< RemoveOfflineMessageResponse* >(object);
  (void)_this;
}
void RemoveOfflineMessageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RemoveOfflineMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RemoveOfflineMessageResponse& RemoveOfflineMessageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RemoveOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto.base);
  return *internal_default_instance();
}


void RemoveOfflineMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fixbug.RemoveOfflineMessageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOfflineMessageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .fixbug.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RemoveOfflineMessageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fixbug.RemoveOfflineMessageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fixbug.ResultCode result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fixbug.RemoveOfflineMessageResponse)
  return target;
}

size_t RemoveOfflineMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fixbug.RemoveOfflineMessageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .fixbug.ResultCode result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveOfflineMessageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fixbug.RemoveOfflineMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOfflineMessageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RemoveOfflineMessageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fixbug.RemoveOfflineMessageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fixbug.RemoveOfflineMessageResponse)
    MergeFrom(*source);
  }
}

void RemoveOfflineMessageResponse::MergeFrom(const RemoveOfflineMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fixbug.RemoveOfflineMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    _internal_mutable_result()->::fixbug::ResultCode::MergeFrom(from._internal_result());
  }
}

void RemoveOfflineMessageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fixbug.RemoveOfflineMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOfflineMessageResponse::CopyFrom(const RemoveOfflineMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fixbug.RemoveOfflineMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOfflineMessageResponse::IsInitialized() const {
  return true;
}

void RemoveOfflineMessageResponse::InternalSwap(RemoveOfflineMessageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOfflineMessageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QueryOfflineMessageRequest::InitAsDefaultInstance() {
}
class QueryOfflineMessageRequest::_Internal {
 public:
};

QueryOfflineMessageRequest::QueryOfflineMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:fixbug.QueryOfflineMessageRequest)
}
QueryOfflineMessageRequest::QueryOfflineMessageRequest(const QueryOfflineMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:fixbug.QueryOfflineMessageRequest)
}

void QueryOfflineMessageRequest::SharedCtor() {
  userid_ = 0u;
}

QueryOfflineMessageRequest::~QueryOfflineMessageRequest() {
  // @@protoc_insertion_point(destructor:fixbug.QueryOfflineMessageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryOfflineMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void QueryOfflineMessageRequest::ArenaDtor(void* object) {
  QueryOfflineMessageRequest* _this = reinterpret_cast< QueryOfflineMessageRequest* >(object);
  (void)_this;
}
void QueryOfflineMessageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryOfflineMessageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryOfflineMessageRequest& QueryOfflineMessageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryOfflineMessageRequest_offline_5fmessage_5frepo_5fservice_2eproto.base);
  return *internal_default_instance();
}


void QueryOfflineMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:fixbug.QueryOfflineMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryOfflineMessageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 userid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryOfflineMessageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fixbug.QueryOfflineMessageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 userid = 1;
  if (this->userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_userid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fixbug.QueryOfflineMessageRequest)
  return target;
}

size_t QueryOfflineMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fixbug.QueryOfflineMessageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 userid = 1;
  if (this->userid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_userid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryOfflineMessageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fixbug.QueryOfflineMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryOfflineMessageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryOfflineMessageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fixbug.QueryOfflineMessageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fixbug.QueryOfflineMessageRequest)
    MergeFrom(*source);
  }
}

void QueryOfflineMessageRequest::MergeFrom(const QueryOfflineMessageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fixbug.QueryOfflineMessageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
}

void QueryOfflineMessageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fixbug.QueryOfflineMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryOfflineMessageRequest::CopyFrom(const QueryOfflineMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fixbug.QueryOfflineMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryOfflineMessageRequest::IsInitialized() const {
  return true;
}

void QueryOfflineMessageRequest::InternalSwap(QueryOfflineMessageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(userid_, other->userid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryOfflineMessageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void QueryOfflineMessageResponse::InitAsDefaultInstance() {
  ::fixbug::_QueryOfflineMessageResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::fixbug::ResultCode*>(
      ::fixbug::ResultCode::internal_default_instance());
}
class QueryOfflineMessageResponse::_Internal {
 public:
  static const ::fixbug::ResultCode& result(const QueryOfflineMessageResponse* msg);
};

const ::fixbug::ResultCode&
QueryOfflineMessageResponse::_Internal::result(const QueryOfflineMessageResponse* msg) {
  return *msg->result_;
}
void QueryOfflineMessageResponse::clear_result() {
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
}
QueryOfflineMessageResponse::QueryOfflineMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  msgs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:fixbug.QueryOfflineMessageResponse)
}
QueryOfflineMessageResponse::QueryOfflineMessageResponse(const QueryOfflineMessageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      msgs_(from.msgs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    result_ = new ::fixbug::ResultCode(*from.result_);
  } else {
    result_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:fixbug.QueryOfflineMessageResponse)
}

void QueryOfflineMessageResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueryOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto.base);
  result_ = nullptr;
}

QueryOfflineMessageResponse::~QueryOfflineMessageResponse() {
  // @@protoc_insertion_point(destructor:fixbug.QueryOfflineMessageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void QueryOfflineMessageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete result_;
}

void QueryOfflineMessageResponse::ArenaDtor(void* object) {
  QueryOfflineMessageResponse* _this = reinterpret_cast< QueryOfflineMessageResponse* >(object);
  (void)_this;
}
void QueryOfflineMessageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void QueryOfflineMessageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueryOfflineMessageResponse& QueryOfflineMessageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueryOfflineMessageResponse_offline_5fmessage_5frepo_5fservice_2eproto.base);
  return *internal_default_instance();
}


void QueryOfflineMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:fixbug.QueryOfflineMessageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgs_.Clear();
  if (GetArena() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* QueryOfflineMessageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .fixbug.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bytes msgs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_msgs();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueryOfflineMessageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:fixbug.QueryOfflineMessageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fixbug.ResultCode result = 1;
  if (this->has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::result(this), target, stream);
  }

  // repeated bytes msgs = 2;
  for (int i = 0, n = this->_internal_msgs_size(); i < n; i++) {
    const auto& s = this->_internal_msgs(i);
    target = stream->WriteBytes(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fixbug.QueryOfflineMessageResponse)
  return target;
}

size_t QueryOfflineMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fixbug.QueryOfflineMessageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes msgs = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(msgs_.size());
  for (int i = 0, n = msgs_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      msgs_.Get(i));
  }

  // .fixbug.ResultCode result = 1;
  if (this->has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryOfflineMessageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fixbug.QueryOfflineMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryOfflineMessageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueryOfflineMessageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fixbug.QueryOfflineMessageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fixbug.QueryOfflineMessageResponse)
    MergeFrom(*source);
  }
}

void QueryOfflineMessageResponse::MergeFrom(const QueryOfflineMessageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fixbug.QueryOfflineMessageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgs_.MergeFrom(from.msgs_);
  if (from.has_result()) {
    _internal_mutable_result()->::fixbug::ResultCode::MergeFrom(from._internal_result());
  }
}

void QueryOfflineMessageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fixbug.QueryOfflineMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryOfflineMessageResponse::CopyFrom(const QueryOfflineMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fixbug.QueryOfflineMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryOfflineMessageResponse::IsInitialized() const {
  return true;
}

void QueryOfflineMessageResponse::InternalSwap(QueryOfflineMessageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  msgs_.InternalSwap(&other->msgs_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueryOfflineMessageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

offline_message_model::~offline_message_model() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* offline_message_model::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_offline_5fmessage_5frepo_5fservice_2eproto);
  return file_level_service_descriptors_offline_5fmessage_5frepo_5fservice_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* offline_message_model::GetDescriptor() {
  return descriptor();
}

void offline_message_model::insert(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::fixbug::InsertOfflineMessageRequest*,
                         ::fixbug::InsertOfflineMessageResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method insert() not implemented.");
  done->Run();
}

void offline_message_model::remove(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::fixbug::RemoveOfflineMessageRequest*,
                         ::fixbug::RemoveOfflineMessageResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method remove() not implemented.");
  done->Run();
}

void offline_message_model::query(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::fixbug::QueryOfflineMessageRequest*,
                         ::fixbug::QueryOfflineMessageResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method query() not implemented.");
  done->Run();
}

void offline_message_model::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_offline_5fmessage_5frepo_5fservice_2eproto[0]);
  switch(method->index()) {
    case 0:
      insert(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::fixbug::InsertOfflineMessageRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::fixbug::InsertOfflineMessageResponse*>(
                 response),
             done);
      break;
    case 1:
      remove(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::fixbug::RemoveOfflineMessageRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::fixbug::RemoveOfflineMessageResponse*>(
                 response),
             done);
      break;
    case 2:
      query(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::fixbug::QueryOfflineMessageRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::fixbug::QueryOfflineMessageResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& offline_message_model::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::fixbug::InsertOfflineMessageRequest::default_instance();
    case 1:
      return ::fixbug::RemoveOfflineMessageRequest::default_instance();
    case 2:
      return ::fixbug::QueryOfflineMessageRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& offline_message_model::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::fixbug::InsertOfflineMessageResponse::default_instance();
    case 1:
      return ::fixbug::RemoveOfflineMessageResponse::default_instance();
    case 2:
      return ::fixbug::QueryOfflineMessageResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

offline_message_model_Stub::offline_message_model_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
offline_message_model_Stub::offline_message_model_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
offline_message_model_Stub::~offline_message_model_Stub() {
  if (owns_channel_) delete channel_;
}

void offline_message_model_Stub::insert(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::fixbug::InsertOfflineMessageRequest* request,
                              ::fixbug::InsertOfflineMessageResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void offline_message_model_Stub::remove(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::fixbug::RemoveOfflineMessageRequest* request,
                              ::fixbug::RemoveOfflineMessageResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void offline_message_model_Stub::query(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::fixbug::QueryOfflineMessageRequest* request,
                              ::fixbug::QueryOfflineMessageResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace fixbug
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::fixbug::InsertOfflineMessageRequest* Arena::CreateMaybeMessage< ::fixbug::InsertOfflineMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::fixbug::InsertOfflineMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::fixbug::InsertOfflineMessageResponse* Arena::CreateMaybeMessage< ::fixbug::InsertOfflineMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::fixbug::InsertOfflineMessageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::fixbug::RemoveOfflineMessageRequest* Arena::CreateMaybeMessage< ::fixbug::RemoveOfflineMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::fixbug::RemoveOfflineMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::fixbug::RemoveOfflineMessageResponse* Arena::CreateMaybeMessage< ::fixbug::RemoveOfflineMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::fixbug::RemoveOfflineMessageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::fixbug::QueryOfflineMessageRequest* Arena::CreateMaybeMessage< ::fixbug::QueryOfflineMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::fixbug::QueryOfflineMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::fixbug::QueryOfflineMessageResponse* Arena::CreateMaybeMessage< ::fixbug::QueryOfflineMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::fixbug::QueryOfflineMessageResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
